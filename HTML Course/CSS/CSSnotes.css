/* These are my notes on CSS -
	Where do we write CSS?
		1-dans un fichier .css  (méthode la plus recommandée) ;
		2-dans l'en-tête <head>  du fichier HTML ;
		2-directement dans les balises du fichier HTML via un attribut style  (méthode la moins recommandée).

1 ex of html referencing css file you created - style.css
	<!DOCTYPE html>
	<html>
    	<head>
        	<meta charset="utf-8" />
        	<link rel="stylesheet" href="style.css" />
        	<title>Premiers tests du CSS</title>
    	</head>

    	<body>
        	<h1>Mon super site</h1>
        
        	<p>Bonjour et bienvenue sur mon site !</p>
        	<p>Pour le moment, mon site est un peu <em>vide</em>. Patientez encore un peu !</p>
    	</body>
	</html>

2 ex of in text - en-tete css - less recommended
		<!DOCTYPE html>
	<html>
	    <head>
    	    <meta charset="utf-8" />
        	<style>
            p
            }
                color: blue;
            }
        	</style>
        	<title>Premiers tests du CSS</title>
    	</head>

    	<body>
        	<h1>Mon super site</h1>
        
        	<p>Bonjour et bienvenue sur mon site !</p>
        	<p>Pour le moment, mon site est un peu <em>vide</em>. Patientez encore un peu !</p>
    	</body>
	</html>

3 ex in the balise/tag - not recommended

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>Premiers tests du CSS</title>
    </head>

    <body>
        <h1>Mon super site</h1>
        
        <p style="color: blue;">Bonjour et bienvenue sur mon site !</p>
        <p>Pour le moment, mon site est un peu <em>vide</em>. Patientez encore un peu !</p>
    </body>
</html>


des noms de balises : on écrit les noms des balises dont on veut modifier l'apparence. Par exemple, si je veux modifier l'apparence de tous 
les paragraphes <p>  , je dois écrire p  ;


des propriétés CSS : les « effets de style » de la page sont rangés dans des propriétés. Il y a par exemple la propriété 
color  - permet d'indiquer la couleur du texte, 
font-size - permet d'indiquer la taille du texte, 

Il y a beaucoup de propriétés CSS et, comme je vous l'ai dit, je ne vous obligerai pas à les connaître toutes par cœur ;

LOTS of properties/propriétés
Each property has a value - valeur
les valeurs : pour chaque propriété CSS, on doit indiquer une valeur. 
color - needs name of color , il faut indiquer le nom de la couleur. 
font-size - needs what size you want, il faut indiquer quelle taille on veut, etc.


CSS example: ; 
*/

balise1
{
    propriete1: valeur1;
    propriete2: valeur2;
    propriete3: valeur3;
}

balise2
{
    propriete1: valeur1;
    propriete2: valeur2;
    propriete3: valeur3;
    propriete4: valeur4;
}

balise3
{
    propriete1: valeur1;
}



/* Je veux que tous mes paragraphes soient écrits en bleu. */

p
{
    color: blue;
}


/* Je veux all the h1 in blue */

h1
{
    color: blue;
}


/* Il signifie que nos titres h1  et nos textes importants em  doivent s'afficher en bleu - but repetitive */

h1
{
    color: blue;
}

em
{
    color: blue;
}

/* Instead, just put comma between all the elements you want to have the same property value/s */

h1, em
{
    color: blue;
}


/* 
l'attribut class  ;

l'attribut id  .

Que les choses soient claires dès le début : les attributs class  et id  sont quasiment identiques
class can be used several times, id has to be unique word, used once */

<h1 class=""> </h1>
<p class=""> </p>
<img class="" />


/* écrire un nom qui sert à identifier la balise
- write class at the balise you want in html and give that balise a name - below is p under h1 - class=introduction 
Je veux que seules les balises qui ont comme nom 'introduction' soient affichées en bleu */

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <link rel="stylesheet" href="style.css" />
        <title>Premiers tests du CSS</title>
    </head>

    <body>
        <h1>Mon super site</h1>
        
        <p class="introduction">Bonjour et bienvenue sur mon site !</p>
        <p>Pour le moment, mon site est un peu <em>vide</em>. Patientez encore un peu !</p>
    </body>
</html>

/* in css for - Je veux que seules les balises qui ont comme nom 'introduction' soient affichées en bleu :
See the period in front of introduction */
.introduction
{
    color: blue;
}

/* Use id instead of class when there is something that is to be treated the same throughout the website, like a logo 
ex:  
sur des éléments qui sont uniques dans la page, comme par exemple le logo :*/
/* in html:  */;
<img src="images/logo.png" alt="Logo du site" id="logo">

/* in css */
#logo
{
    /* Indiquez les propriétés CSS ici */
}

/* Use hashtag #logo to make all the logos have the same properties

/*  NOTE class can only be used with a balise/tag; ie with p or h1 etc,
to treat certain words in the middle of a paragraph, use <span> 

<span> </span>  : c'est une balise de type inline, c'est-à-dire une balise que l'on place au sein d'un paragraphe de texte pour sélectionner certains mots uniquement. 
Les balises <strong>  et <em>  sont de la même famille. 
Cette balise s'utilise donc au milieu d'un paragraphe et c'est celle dont nous allons nous servir pour colorer « bienvenue » ;

<div> </div>  : c'est une balise de type block, qui entoure un bloc de texte. 
Les balises <p>  ,  <h1>  , etc., sont de la même famille. 
Ces balises ont quelque chose en commun : elles créent un nouveau « bloc » dans la page et provoquent donc obligatoirement un retour à la ligne. 
<div>  est une balise fréquemment utilisée dans la construction d'un design, comme nous le verrons plus tard */ 

- in html:
<p>Bonjour et <span class="salutations">bienvenue</span> sur mon site !</p>

.salutations
{
    color: blue;
}


/* Selectors -  
ex:  I want to select all the paragraphs; */
p
{

}

/* I want to selecti all the h1 - imp't headings, and em - imp't text */
h1, em
{

}


/* I want to select all the specific named balises listed :
sélectionner des balises précises à qui nous avons donné un nom, grâce aux attributs class  et id */

.class
{

}

#id
{

}

/* ADVANCED SELECTORS */

/* asterisk *: sélecteur universel - I want EVERYTHING in the website to be treated like this - */
*
{

}

/* A B : une balise contenue dans une autre */
/* says I want all em - imp't text, in h3 level headings to have these properties */

h3 em
{

}

/* in html we see: ;
<h3>Titre avec <em>texte important</em></h3>    */


/*  A + B : une balise qui en suit une autre 
says, the paragraph after h3 heading has these properties */
/* in html:  ;
<h3>Titre</h3>

<p>Paragraphe</p>  */

h3 + p
{

}


/*
A[attribut] : une balise qui possède un attribut
Sélectionne tous les liens <a>  qui possèdent un attribut title
selects all the links with an a that have a title attribute
<a href="http://site.com" title="Infobulle">  */

a[title]
{

}


/* A[attribut="Valeur"] : une balise, un attribut et une valeur exacte
l'attribut doit en plus avoir exactement pour valeur « Cliquez ici »
<a href="http://site.com" title="Cliquez ici">  */

a[title="Cliquez ici"]
{

}


/* A[attribut*="Valeur"] : une balise, un attribut et une valeur
l'attribut doit cette fois contenir dans sa valeur le mot « ici » (peu importe sa position)
<a href="http://site.com" title="Quelque part par ici">  */

a[title*="ici"]
{

}


/* THIS is just a partial list, for a full list of selectors, the W3 consortium - https://www.w3.org/Style/css3-selectors-updates/WD-css3-selectors-20010126.fr.html#selectors  

CSS est un autre langage qui vient compléter le HTML. Son rôle est de mettre en forme votre page web.

Il faut être vigilant sur la compatibilité des navigateurs avec certaines fonctionnalités récentes de CSS3. Quand un navigateur ne connaît pas une instruction de mise en forme, il l'ignore simplement.

On peut écrire le code CSS à plusieurs endroits différents, le plus conseillé étant de créer un fichier séparé portant l'extension .css  (exemple : style.css  ).

En CSS, on sélectionne quelles portions de la page HTML on veut modifier, et on change leur présentation avec des propriétés CSS : */

balise1
{
    propriete1: valeur1;
    propriete2: valeur2;
}

/*Il existe de nombreuses façons de sélectionner la portion de la page que l'on veut mettre en forme. Par exemple, on peut viser :

toutes les balises d'un même type, en écrivant simplement leur nom ( h1  , par exemple) ;

certaines balises spécifiques, auxquelles on a donné des noms à l'aide des attributs class  ou id  ( .nomclasse  ou #nomid  ) ;

uniquement les balises qui se trouvent à l'intérieur d'autres balises ( h3 em  ).

etc.





FORMAT TEXT
font size: ;
1.5em - relative size for font


font-family - list 1st choice, comma, then list next preferred etc, so it has choice among several fonts

can make website download a specific font.. on fontsquirrel website il y a several fonts and with CSS code to install...






 Taille
 Taille absolu - you put the pixel measurement of the letters*/
p
{
    font-size: 14px; /* Paragraphes de 14 pixels */
}
h1
{
    font-size: 40px; /* Titres de 40 pixels */
}



/* Taille relative - adjusts to user's screen */
/*
xx-small  : minuscule ;

x-small  : très petit ;

small  : petit ;

medium  : moyen ;

large  : grand ;

x-large  : très grand ;

xx-large  : euh… gigantesque.
*/

p
{
    font-size: small;
}
h1
{
    font-size: large;
}

/* taille relative preferred
Si vous écrivez 1em  , le texte a une taille normale.

Si vous voulez grossir le texte, vous pouvez inscrire une valeur supérieure à 1, comme 1.3em  .

Si vous voulez réduire le texte, inscrivez une valeur inférieure à 1, comme 0.8em  .*/
p
{
    font-size: 0.8em;
}
h1
{
    font-size: 1.3em;
}





/* FONT 
use font-family, or several */

balise
{
    font-family: police;
}

balise
{
    font-family: police1, police2, police3, police4, serif;
}


/* The most common fonts:  
Voici une liste de polices qui fonctionnent bien sur la plupart des navigateurs :
NOTE - if a font name has a space, best to use quotes around name like with "Arial Black"
Arial ;

Arial Black ;

Comic Sans MS ;

Courier New ;

Georgia ;

Impact ;

Times New Roman ;

Trebuchet MS ;

Verdana.
*/

p
{
    font-family: Impact, "Arial Black", Arial, Verdana, sans-serif;
}


/* Utiliser une police personnalisée avec @font-face

il faudra que le navigateur de vos visiteurs télécharge automatiquement le fichier de la police, dont le poids peut atteindre, voire dépasser 1 Mo… ;

la plupart des polices sont soumises au droit d'auteur, il n'est donc pas légal de les utiliser sur son site. Heureusement, il existe des sites comme fontsquirrel.com et dafont.com qui proposent en téléchargement un certain nombre de polices libres de droits. Je recommande en particulier fontsquirrel.com, car il permet de télécharger des packs prêts à l'emploi pour CSS 3 ;

il existe plusieurs formats de fichiers de polices, et ceux-ci ne fonctionnent pas sur tous les navigateurs.

Voici les différents formats de fichiers de polices qui existent et qu'il faut connaître :

.ttf  : TrueType Font. Fonctionne sur IE9 et tous les autres navigateurs ;

.eot  : Embedded OpenType. Fonctionne sur Internet Explorer uniquement, toutes versions. Ce format est propriétaire, produit par Microsoft ;

.otf  : OpenType Font. Ne fonctionne pas sur Internet Explorer ;

.svg  : SVG Font. Le seul format reconnu sur les iPhone et iPad pour le moment ;

.woff  : Web Open Font Format. Nouveau format conçu pour le Web, qui fonctionne sur IE9 et tous les autres navigateurs.

En CSS, pour définir une nouvelle police, vous devez la déclarer comme ceci :
*/

@font-face {
    font-family: 'MaSuperPolice';
    src: url('MaSuperPolice.eot');
}

/* the file - MaSuperPolice.eot needs to be in same folder as css file 
es .eot ne fonctionnent que sur Internet Explorer. 
L'idéal est de proposer plusieurs formats pour la police : le navigateur téléchargera celui qu'il sait lire. 
Voici comment indiquer plusieurs formats /*
*/
@font-face {
    font-family: 'MaSuperPolice';
    src: url('MaSuperPolice.eot') format('eot'),
         url('MaSuperPolice.woff') format('woff'),
         url('MaSuperPolice.ttf') format('truetype'),
         url('MaSuperPolice.svg') format('svg');
}




/* exercice de télécharger une police
tester le fonctionnement, je vous propose de télécharger une police sur Font Squirrel, 
par exemple CAC Champagne. Cliquez sur « Webfont Kit », cela vous permettra de télécharger un kit prêt à l'emploi avec tous les formats pour cette police. 
N'oubliez pas de cocher toutes les cases (WOFF, TTF, EOT et SVG
-----champagne n'existe plus
police CAC Champagne n'est plus disponible, mais vous pouvez télécharger une autre police que vous aimez bien ! ;)

Pour trouver les polices qui vous permettent de télécharger un "pack CSS" comme je le décris ici, activez le filtre "Webfont" dans le menu Font Filter.

your file or fichier will look like: ;*/

@font-face { /* Définition d'une nouvelle police nommée CAC Champagne */
    font-family: 'cac_champagneregular';
    src: url('cac_champagne-webfont.eot');
    src: url('cac_champagne-webfont.eot?#iefix') format('embedded-opentype'),
         url('cac_champagne-webfont.woff') format('woff'),
         url('cac_champagne-webfont.ttf') format('truetype'),
         url('cac_champagne-webfont.svg#cac_champagneregular') format('svg');
}

h1 /* Utilisation de la police qu'on vient de définir sur les titres */
{
    font-family: 'cac_champagneregular', Arial, serif;
}

/* USE FONT-STYLE for italic bold and normal - normal cancels italic  etc
utilise font-style  qui peut prendre trois valeurs :

italic  : le texte sera mis en italique ;

oblique  : le texte sera passé en oblique (les lettres sont penchées, le résultat est légèrement différent de l'italique proprement dit) ;

normal  : le texte sera normal (par défaut). Cela vous permet d'annuler une mise en italique. Par exemple, si vous voulez que les textes entre <em>  ne soient plus en italique, vous devrez écrire :
*/
em
{
    font-style: normal;
}

h2
{
    font-style: italic;
}

h1
{
    font-weight: bold;
}


/*
underline  : souligné ;

line-through  : barré ;

overline  : ligne au-dessus ;

none  : normal (par défaut).

*/

h1
{
    text-decoration: blink;
}
.souligne
{
    text-decoration: underline;
}
.barre
{
    text-decoration: line-through;
}
.ligne_dessus
{
    text-decoration: overline;
}


/* Alignement Alignment

text-align  et on indique l'alignement désiré :

left  : le texte sera aligné à gauche (c'est le réglage par défaut) ;

center  : le texte sera centré ;

right  : le texte sera aligné à droite ;

justify  : le texte sera « justifié ». Justifier le texte permet de faire en sorte qu'il prenne toute la largeur possible sans laisser d'espace blanc à la fin des lignes. Les textes des journaux, par exemple, sont toujours justifiés.
NOte - can only be used with block tags/balises p h1 etc not inline like span

Regardez les différents alignements sur cet exemple :
*/

h1
{
    text-align: center;
}

p
{
    text-align: justify;
}

.signature
{
    text-align: right;
}


/* FLOTTANT**
- also known as habillage
- permet de faire flotter un élément autour du texte

 float  (« flottant » en anglais). Cette propriété peut prendre deux valeurs très simples :

left  : l'élément flottera à gauche ;

right  : l'élément flottera… à droite ! Oui, bravo.

L'utilisation des flottants est très simple :

Vous appliquez un float  à une balise.

Puis vous continuez à écrire du texte à la suite normalement.

On peut aussi bien utiliser la propriété float  sur des balises block que sur des balises inline. 
Il est courant de faire flotter une image pour qu'elle soit habillée par du texte
-- Vous devez placer l'élément flottant en premier dans le code HTML. Si vous placez l'image après le paragraphe, l'effet ne fonctionnera pas

html: ;
<p><img src="flash.gif" class="imageflottante" alt="Image flottante" /> 
Ceci est un texte normal de paragraphe, écrit à la suite de l'image et qui l'habillera car l'image est flottante.</p>

*/

.imageflottante
{
    float: left;
}


/*

Stopper un flottant

« Stop, ce texte doit être en-dessous du flottant et non plus à côté ».
 C'est la propriété clear  , qui peut prendre ces trois valeurs :

left  : le texte se poursuit en dessous après un float: left;

right  : le texte se poursuit en dessous après un float: right;

both  : le texte se poursuit en dessous, que ce soit après un float: left;  ou après un float: right;  .

Pour simplifier, on va utiliser tout le temps le clear: both  ,
 qui marche après un flottant à gauche et après un flottant à droite (cela fonctionne donc à tous les coups). 
 Pour illustrer son fonctionnement, on va prendre ce code HTML :

<p><img src="flash.gif" class="imageflottante" alt="Image flottante" /></p>
<p>Ce texte est écrit à côté de l'image flottante.</p>
<p class="dessous">Ce texte est écrit sous l'image flottante.</p>
*/

.imageflottante
{
    float: left;
}
.dessous
{
    clear: both;
}




/*
résumé
On modifie la taille du texte avec la propriété CSS font-size  .
 On peut indiquer la taille en pixels (16px), en « em » (1.3em), en pourcentage (110 %), etc.

On change la police du texte avec font-family  .
 Attention, seules quelques polices sont connues par tous les ordinateurs. 
 Vous pouvez cependant utiliser une police personnalisée avec la directive 
 @font-face  : cela forcera les navigateurs à télécharger la police de votre choix.

De nombreuses propriétés de mise en forme du texte existent : 
font-style  pour l'italique, 
font-weight  pour la mise en gras, 
text-decoration  pour le soulignement, etc.

Le texte peut être aligné avec text-align  .

On peut faire en sorte qu'une image soit habillée (« entourée ») de texte avec float














COLORS*
- Text
- Background
- background image..
comment changer la couleur du texte ;

comment mettre une couleur ou une image d'arrière-plan ;

comment ajouter des ombres ;

comment jouer avec les niveaux de transparence.
*/
h1
{
    color: maroon;
}


nom de couleur en hexadécimal, cela ressemble à : #FF5A28. Pour faire simple, c'est une combinaison de lettres et de chiffres qui indiquent une couleur.
On doit toujours commencer par écrire un dièse (#), suivi de six lettres ou chiffres allant de 0 à 9 et de A à F.
Ces lettres ou chiffres fonctionnent deux par deux. Les deux premiers indiquent une quantité de rouge, les deux suivants une quantité de vert et les deux derniers une quantité de bleu. En mélangeant ces quantités (qui sont les composantes Rouge-Vert-Bleu de la couleur) on peut obtenir la couleur qu'on veut.

Ainsi, #000000 correspond à la couleur noire et #FFFFFF à la couleur blanche


p
{
    color: #FFFFFF;
}

 #FA3 équivaut à écrire #FFAA33


 Red-Green-Blue, ce qui s'abrège en « RGB ». Comme avec la notation hexadécimale, pour choisir une couleur, on doit définir une quantité de rouge, de vert et de bleu.
 quantités sont toujours comprises entre 0 et 255

  http://www.colorpicker.com
   extensions de navigateur qui permettent de "récupérer" n'importe quelle couleur qui vous plaît sur un site web :

ColorPicker pour Firefox ;

ColorZilla pour Chrome.

me: https://www.w3schools.com/colors/colors_monochromatic.asp


BACKGROUND Color

couleur de fond, on utilise la propriété CSS background-color  . 
Elle s'utilise de la même manière que la propriété color  , 
c'est-à-dire que vous pouvez taper le nom d'une couleur, 
l'écrire en notation hexadécimale ou encore utiliser la méthode RGB.
couleur de fond de la page web, il faut travailler sur la balise <body>  . 
Eh oui, <body>  correspond à l'ensemble de la page web 

/* On travaille sur la balise body, donc sur TOUTE la page */
body
{
    background-color: black; /* Le fond de la page sera noir */
    color: white; /* Le texte de la page sera blanc */
}



En CSS, si vous appliquez un style à une balise, toutes les balises qui se trouvent à l'intérieur prendront le même style





Appliquer une image de fond
La propriété permettant d'indiquer une image de fond est background-image  . Comme valeur, on doit renseigner url("nom_de_l_image.png")  . Par exemple :
body
{
    background-image: url("neige.png");
}
body
{
    background-image: url("neige.png");
    background-attachment: fixed; /* Le fond restera fixe */
}

background-attachment  : fixer le fond
background-repeat  :

no-repeat  : le fond ne sera pas répété. L'image sera donc unique sur la page ;

repeat-x  : le fond sera répété uniquement sur la première ligne, horizontalement ;

repeat-y  : le fond sera répété uniquement sur la première colonne, verticalement ;

repeat  : le fond sera répété en mosaïque (par défaut)

body
{
    background-image: url("soleil.png");
    background-repeat: no-repeat;
}



Vous devez donner à background-position  
deux valeurs en pixels pour indiquer la position du fond par rapport au coin supérieur gauche de la page 
(ou du paragraphe, si vous appliquez le fond à un paragraphe). Ainsi, si vous tapez :
background-position: 30px 50px;


top  : en haut ;

bottom  : en bas ;

left  : à gauche ;

center  : centré ;

right  : à droite.

Il est possible de combiner ces mots. Par exemple, pour aligner une image en haut à droite, vous taperez :

background-position: top right;
Ainsi, si je veux afficher un soleil en image de fond 
(figure suivante), en un unique exemplaire ( no-repeat  ), toujours visible ( fixed  ) 
et positionné en haut à droite ( top right  ), je vais écrire ceci :


body
{
    background-image: url("soleil.png");
    background-attachment: fixed; /* Le fond restera fixe */
    background-repeat: no-repeat; /* Le fond ne sera pas répété */
    background-position: top right; /* Le fond sera placé en haut à droite */
}


COMBINE several plusieurs feqtures
body
{
    background: url("soleil.png") fixed no-repeat top right;
}


l'ordre des valeurs n'a pas d'importance. Vous pouvez combiner les valeurs dans n'importe quel ordre ;

vous n'êtes pas obligé de mettre toutes les valeurs. Ainsi, si vous ne voulez pas écrire fixed  , vous pouvez l'enlever sans problème



Several background images
body
{
    background: url("soleil.png") fixed no-repeat top right, url("neige.png") fixed;
}




Avec une valeur de 1, l'élément sera totalement opaque : c'est le comportement par défaut.

Avec une valeur de 0, l'élément sera totalement transparent.

Il faut donc choisir une valeur comprise entre 0 et 1. Ainsi, avec une valeur de 0.6, votre élément sera opaque à 60 %… et on verra donc à travers 
p
{
    opacity: 0.6;
}



Below - the background color is black but put at .3 opacity means it becomes pale gray with white text you can see on top
body
{
    background: url('neige.png');
}

p
{
    background-color: black;
    color: white;
    opacity: 0.3;
}


OPACITY
jouer avec la transparence : la notation RGBaj
"canal alpha". valeur de 1, le fond est complètement opaque. Avec une valeur inférieure à 1, il est transparent.

p
{
    background-color: rgba(255, 0, 0, 0.5); /* Fond rouge à moitié transparent */
}

p
{
    background-color: rgb(255,0,0); /* Pour les navigateurs anciens */
    background-color: rgba(255,0,0,0.5); /* Pour les navigateurs plus récents */
}



BORDERS BORDERS and SHADOWS SHADOWS

ropriétés CSS vous permettent de modifier l'apparence de vos bordures : border-width  , border-color  , border-style  …

Pour aller à l'essentiel, je vous propose ici d'utiliser directement la super-propriété border

la largeur : indiquez la largeur de votre bordure. Mettez une valeur en pixels (comme 2px  ) ;

la couleur : c'est la couleur de votre bordure. Utilisez, comme on l'a appris, soit un nom de couleur ( black  , red  …), soit une valeur hexadécimale ( #FF0000  ), soit une valeur RGB ( rgb(198, 212, 37)  ) ;

le type de bordure : là, vous avez le choix. Votre bordure peut être un simple trait, ou des pointillés, ou encore des tirets, etc. Voici les différentes valeurs disponibles :

none  : pas de bordure (par défaut) ;

solid  : un trait simple ;

dotted  : pointillés ;

dashed  : tirets ;

double  : bordure double ;

groove  : en relief ;

ridge  : autre effet relief ;

inset  : effet 3D global enfoncé ;

outset  : effet 3D global surélevé.

h1
{
    border: 3px blue dashed;
}


quatre propriétés :

border-top  : bordure du haut ;

border-bottom  : bordure du bas ;

border-left  : bordure de gauche ;

border-right  : bordure de droite.

Il existe aussi des équivalents pour paramétrer chaque détail de la bordure si vous le désirez : 
border-top-width  pour modifier l'épaisseur de la bordure du haut, border-top-color  pour la couleur du haut


ROUNDED corners of borders:
p
{
    border-radius: 10px;
}


SHADOWS
box-shadow  : les ombres des boîtes
La propriété box-shadow  s'applique à tout le bloc et prend quatre valeurs dans l'ordre suivant :

Le décalage horizontal de l'ombre.

Le décalage vertical de l'ombre.

L'adoucissement du dégradé.

La couleur de l'ombre

p
{
    box-shadow: 6px 6px 0px black;
}

text-shadow  : l'ombre du texte
Avec text-shadow  , vous pouvez ajouter une ombre directement sur les lettres de votre texte ! 
Les valeurs fonctionnent exactement de la même façon que box-shadow  : décalage, adoucissement et couleur.

p
{
    text-shadow: 2px 2px 4px black;
}








changer l'apparence :

au survol ;

lors du clic ;

lors du focus (élément sélectionné) ;

lorsqu'un lien a été consulté.

Au SURVOL - HOVER
a:hover says - when the mouse is on the link - quand la souris est sur le lien/pointe dessus
a:hover
{
   
}




On a défini ici deux versions des styles pour les liens :

pour les liens par défaut (non survolés) ;

pour les liens au survol.
a /* Liens par défaut (non survolés) */
{
   text-decoration: none;
   color: red;
   font-style: italic;
}

a:hover /* Apparence au survol des liens */
{
   text-decoration: underline;
   color: green;
}

